services:
  api1:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      - TZ=Asia/Kolkata
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/student_api?sslmode=disable
      - GIN_MODE=debug
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - student-api-network

  api2:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      - TZ=Asia/Kolkata
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/student_api?sslmode=disable
      - GIN_MODE=debug
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - student-api-network

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    networks:
      - student-api-network

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=student_api
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - student-api-network

volumes:
  postgres_data:

networks:
  student-api-network:
    driver: bridge
