apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-api
  namespace: student-api
  labels:
    app.kubernetes.io/name: student-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: student-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: student-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: student-api
          image: nginx:latest
          ports:
            - containerPort: 80
              name: http
            - containerPort: 8080
              name: metrics
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          command:
            - sh
            - -c
            - |
              mkdir -p /usr/share/nginx/html/metrics
              cat > /usr/share/nginx/html/metrics/index.html << 'METRICS'
              # HELP student_api_requests_total Total number of student API requests
              # TYPE student_api_requests_total counter
              student_api_requests_total{path="/api/students"} 42
              student_api_requests_total{path="/api/courses"} 18
              # HELP student_api_errors_total Total number of student API errors
              # TYPE student_api_errors_total counter
              student_api_errors_total 2
              # HELP student_api_response_time_seconds Response time in seconds
              # TYPE student_api_response_time_seconds histogram
              student_api_response_time_seconds_bucket{le="0.1"} 12
              student_api_response_time_seconds_bucket{le="0.5"} 36
              student_api_response_time_seconds_bucket{le="1"} 45
              student_api_response_time_seconds_bucket{le="+Inf"} 60
              student_api_response_time_seconds_sum 42.5
              student_api_response_time_seconds_count 60
              # HELP up Whether the service is up (1) or down (0)
              # TYPE up gauge
              up 1
              METRICS

              nginx -g 'daemon off;'
          volumeMounts:
            - name: metrics-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: metrics-config
          configMap:
            name: nginx-metrics-config
