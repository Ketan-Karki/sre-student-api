apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  # Email notification configuration
  service.email: |
    host: smtp.gmail.com
    port: 587
    username: ketankarki2626@gmail.com
    password: $email-password
    from: ketankarki2626@gmail.com
    tls:
      insecure_skip_verify: false
      required: true
    auth_required: true

  # Use webhook with URL directly in the service configuration
  service.webhook.discord: |
    url: https://discord.com/api/webhooks/1350131155873169489/ApqR-3BLwyzHnN-69a_muBG48zNwGD4TBuKOZcYzjAcAf2R2MT3xvIcMl-iI85yYhOph
    headers:
    - name: Content-Type
      value: application/json

  # Trigger definitions
  trigger.on-sync-status-change: |
    - when: app.status.sync.status == 'Synced'
      send: [app-sync-succeeded]
    - when: app.status.sync.status == 'OutOfSync'
      send: [app-out-of-sync]

  trigger.on-health-status-change: |
    - when: app.status.health.status == 'Degraded'
      send: [app-health-degraded]
    - when: app.status.health.status == 'Healthy'
      send: [app-health-recovered]

  trigger.on-deployed: |
    - when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
      send: [app-deployed]

  trigger.on-test-now: |
    - when: app.metadata.name == 'student-api-dev' or app.metadata.name == 'student-api-prod'
      send: [test-notification]

  # Default subscription using webhook only
  subscriptions: |
    - recipients:
      - email:ketankarki2626@gmail.com
      triggers:
      - on-sync-status-change
      - on-health-status-change
      - on-deployed
      - on-test-now
    - recipients:
      - webhook:discord
      triggers:
      - on-sync-status-change
      - on-health-status-change
      - on-deployed
      - on-test-now

  # Template definitions for email
  template.app-sync-succeeded: |
    email:
      subject: Application {{.app.metadata.name}} has been successfully synced
      body: |
        Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
        Revision: {{.app.status.sync.revision}}

  template.app-out-of-sync: |
    email:
      subject: Application {{.app.metadata.name}} is out of sync
      body: |
        Application {{.app.metadata.name}} is out of sync.
        Current revision: {{.app.status.sync.revision}}

  template.app-health-degraded: |
    email:
      subject: Application {{.app.metadata.name}} is degraded
      body: |
        Application {{.app.metadata.name}} is degraded.
        Reason: {{range .app.status.resources}}{{if eq .health.status "Degraded"}}{{.name}}: {{.health.message}}{{end}}{{end}}

  template.app-health-recovered: |
    email:
      subject: Application {{.app.metadata.name}} has recovered
      body: |
        Application {{.app.metadata.name}} has recovered.
        Current health status: {{.app.status.health.status}}

  template.app-deployed: |
    email:
      subject: Application {{.app.metadata.name}} has been deployed
      body: |
        Application {{.app.metadata.name}} has been successfully deployed.
        Revision: {{.app.status.sync.revision}}
        Environment: {{if eq .app.metadata.name "student-api-dev"}}Development{{else if eq .app.metadata.name "student-api-prod"}}Production{{else}}Unknown{{end}}

  template.test-notification: |
    email:
      subject: ArgoCD Test Notification for {{.app.metadata.name}}
      body: |
        This is a test notification to verify email notifications are working properly.
        
        Application: {{.app.metadata.name}}
        Status: {{.app.status.sync.status}}
        Health: {{.app.status.health.status}}
        
        Time: {{.context.time}}
        
        ArgoCD Notifications

  # Webhook templates (in separate keys to avoid JSON parsing issues)
  template.app-sync-succeeded.webhook: |
    method: POST
    body: |
      {
        "embeds": [
          {
            "title": "‚úÖ Application {{.app.metadata.name}} has been successfully synced",
            "color": 5025616,
            "description": "Application {{.app.metadata.name}} has been successfully synced.\n\nRevision: {{.app.status.sync.revision}}",
            "footer": {
              "text": "ArgoCD Notification"
            }
          }
        ]
      }

  template.app-out-of-sync.webhook: |
    method: POST
    body: |
      {
        "embeds": [
          {
            "title": "‚ö†Ô∏è Application {{.app.metadata.name}} is out of sync",
            "color": 16761095,
            "description": "Application {{.app.metadata.name}} is out of sync.\n\nCurrent revision: {{.app.status.sync.revision}}",
            "footer": {
              "text": "ArgoCD Notification"
            }
          }
        ]
      }

  template.app-health-degraded.webhook: |
    method: POST
    body: |
      {
        "embeds": [
          {
            "title": "üî¥ Application {{.app.metadata.name}} is degraded",
            "color": 15158332,
            "description": "Application {{.app.metadata.name}} is degraded.\n\nReason: {{range .app.status.resources}}{{if eq .health.status \"Degraded\"}}{{.name}}: {{.health.message}}{{end}}{{end}}",
            "footer": {
              "text": "ArgoCD Notification"
            }
          }
        ]
      }

  template.app-health-recovered.webhook: |
    method: POST
    body: |
      {
        "embeds": [
          {
            "title": "üîµ Application {{.app.metadata.name}} has recovered",
            "color": 3447003,
            "description": "Application {{.app.metadata.name}} has recovered.\n\nCurrent health status: {{.app.status.health.status}}",
            "footer": {
              "text": "ArgoCD Notification"
            }
          }
        ]
      }

  template.app-deployed.webhook: |
    method: POST
    body: |
      {
        "embeds": [
          {
            "title": "üöÄ Application {{.app.metadata.name}} has been deployed",
            "color": 4886754,
            "description": "Application {{.app.metadata.name}} has been successfully deployed.\n\nRevision: {{.app.status.sync.revision}}\nEnvironment: {{if eq .app.metadata.name \"student-api-dev\"}}Development{{else if eq .app.metadata.name \"student-api-prod\"}}Production{{else}}Unknown{{end}}",
            "footer": {
              "text": "ArgoCD Notification - {{.app.status.operationState.finishedAt}}"
            }
          }
        ]
      }

  template.test-notification.webhook: |
    method: POST
    body: |
      {
        "content": "üß™ **ArgoCD Discord Test Notification**",
        "embeds": [
          {
            "title": "üß™ ArgoCD Discord Test Notification",
            "color": 16711680,
            "description": "This is a test notification to verify Discord webhook integration is working properly.\n\nApplication: {{.app.metadata.name}}\nStatus: {{.app.status.sync.status}}\nHealth: {{.app.status.health.status}}\n\nTime: {{.context.time}}",
            "footer": {
              "text": "ArgoCD Notification - {{.context.time}}"
            }
          }
        ]
      }
