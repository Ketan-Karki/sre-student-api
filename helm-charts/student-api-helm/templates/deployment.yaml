apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "student-api.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "student-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.studentApi.replicas }}
  selector:
    matchLabels:
      {{- include "student-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "student-api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.studentApi.image.repository }}:{{ .Values.studentApi.image.tag }}"
          imagePullPolicy: {{ .Values.studentApi.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.studentApi.resources | nindent 12 }}
          env:
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgres.database.user }}:{{ .Values.postgres.database.password }}@postgres-service:{{ .Values.postgres.service.port }}/{{ .Values.postgres.database.name }}?sslmode=disable"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database.name }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.database.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.database.password }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
{{- if .Values.nginx.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Values.nginx.configMap.name }}
{{- end }}
