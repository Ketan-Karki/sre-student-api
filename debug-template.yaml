---
# Source: student-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: debug-1744535375
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      upstream backend {
        server student-api:8080;
      }
      server {
        listen 80;
        server_name localhost;

        location / {
          proxy_pass http://backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
      }
    }
---
# Source: student-api/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: debug-1744535375-local-storage
  labels:
    helm.sh/chart: student-api-0.1.0
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
    app.kubernetes.io/managed-by: Helm
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
# Source: student-api/templates/postgres-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: debug-1744535375
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: student-api/templates/storage.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: debug-1744535375
  labels:
    helm.sh/chart: student-api-0.1.0
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook-weight": "0"
    meta.helm.sh/release-name: debug-1744535375
    meta.helm.sh/release-namespace: default
spec:
  storageClassName: debug-1744535375-local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: student-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: student-api
  namespace: debug-1744535375
  labels:
    helm.sh/chart: student-api-0.1.0
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
---
# Source: student-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: debug-1744535375
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres
---
# Source: student-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: debug-1744535375
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: nginx
---
# Source: student-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-api
  namespace: debug-1744535375
  labels:
    helm.sh/chart: student-api-0.1.0
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: debug-1744535375
    meta.helm.sh/release-namespace: default
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: student-api
      app.kubernetes.io/instance: debug-1744535375
  template:
    metadata:
      labels:
        app.kubernetes.io/name: student-api
        app.kubernetes.io/instance: debug-1744535375
      annotations:
        checksum/config: effaf28eedf28194670bda290a0dec2a5f784fff9983fcc5ed49f307686e0a91
    spec:
      containers:
        - name: student-api
          image: "nginx:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: DATABASE_URL
              value: "postgres://postgres:postgres@postgres-service:5432/api?sslmode=disable"
---
# Source: student-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: debug-1744535375
  labels:
    helm.sh/chart: student-api-0.1.0
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
    app.kubernetes.io/managed-by: Helm
    app: postgres
  annotations:
    meta.helm.sh/release-name: debug-1744535375
    meta.helm.sh/release-namespace: default
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "5"  # Ensure this runs after PVC creation
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: student-api
      app.kubernetes.io/instance: debug-1744535375
      app: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: student-api
        app.kubernetes.io/instance: debug-1744535375
        app: postgres
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
        prometheus.io/path: "/metrics"
        rollme: "wkK0v"
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - name: postgres
          image: "postgres:15.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: api
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
        - name: postgres-exporter
          image: "wrouesnel/postgres_exporter:v0.10.1"
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          ports:
            - containerPort: 9187
              name: metrics
          env:
            - name: DATA_SOURCE_NAME
              value: "postgresql://postgres:postgres@localhost:5432/api?sslmode=disable"
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          startupProbe:
            httpGet:
              path: /health
              port: metrics
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: metrics
            initialDelaySeconds: 0
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health  
              port: metrics
            initialDelaySeconds: 0
            timeoutSeconds: 5
            periodSeconds: 10
      volumes:
        - name: postgres-storage
          emptyDir: {}
---
# Source: student-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: debug-1744535375
  labels:
    helm.sh/chart: student-api-0.1.0
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
    app.kubernetes.io/managed-by: Helm
    app: nginx
  annotations:
    meta.helm.sh/release-name: debug-1744535375
    meta.helm.sh/release-namespace: default
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: student-api
      app.kubernetes.io/instance: debug-1744535375
      app: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: student-api
        app.kubernetes.io/instance: debug-1744535375
        app: nginx
      annotations:
        checksum/config: effaf28eedf28194670bda290a0dec2a5f784fff9983fcc5ed49f307686e0a91
    spec:
      containers:
        - name: nginx
          image: "nginx:66779b1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
# Source: student-api/templates/storage.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: debug-1744535375-local-storage
  labels:
    helm.sh/chart: student-api-0.1.0
    app.kubernetes.io/name: student-api
    app.kubernetes.io/instance: debug-1744535375
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
provisioner: k8s.io/minikube-hostpath
volumeBindingMode: Immediate
